# monGARS configuration example
# Copy this file to .env and adjust values for your deployment.

# Core FastAPI settings
DEBUG=true
SECRET_KEY=dev-secret-change-me
# Ports exposed by docker-compose services
API_PORT=8000
WEBAPP_PORT=8001
POSTGRES_PORT=5432
REDIS_PORT=6379
MLFLOW_PORT=5000
VAULT_PORT=8200
OLLAMA_PORT=11434
RAY_HTTP_PORT=8005
RAY_DASHBOARD_PORT=8265
RAY_CLIENT_PORT=10001
RAY_MIN_WORKER_PORT=20000
RAY_MAX_WORKER_PORT=20100
# Use HS256 when signing tokens with SECRET_KEY. To enable RS256, set
# JWT_ALGORITHM=RS256 and provide JWT_PRIVATE_KEY/JWT_PUBLIC_KEY entries in Vault.
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=60

# Database connection string (asyncpg driver)
# Replace `postgres` with `localhost` if you run Postgres outside of Docker.
DATABASE_URL=postgresql+asyncpg://mongars:changeme@postgres/mongars_db
DB_PASSWORD=changeme

# Redis cache URL
REDIS_URL=redis://redis:6379/0

# Optional OpenTelemetry collector endpoint
OTEL_COLLECTOR_URL=http://localhost:4318
OTEL_METRICS_ENABLED=false
OTEL_TRACES_ENABLED=false

# Vault integration (leave empty to skip)
VAULT_URL=http://vault:8200
VAULT_TOKEN=dev-root-token

# Django operator console defaults
DJANGO_SECRET_KEY=django-insecure-change-me
DJANGO_DEBUG=false
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
FASTAPI_URL=http://api:8000

# Distributed inference toggles
USE_RAY_SERVE=false
RAY_SERVE_URL=http://rayserve:8000/generate

# Ollama connectivity
OLLAMA_HOST=http://ollama:11434

# WebSocket origin whitelist for the API layer
WS_ALLOWED_ORIGINS=["http://localhost:8000","http://localhost:8001"]
