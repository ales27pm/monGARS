version: "3.9"

services:
  mongars:
    image: ${MONGARS_IMAGE:-mongars-app:local}
    build:
      context: ..
      dockerfile: Dockerfile
    env_file:
      - ../.env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://mongars:${DB_PASSWORD:-changeme}@postgres:5432/mongars_db}
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${POSTGRES_PORT:-5432}
      DB_USER: ${DB_USER:-mongars}
      DB_PASSWORD: ${DB_PASSWORD:-changeme}
      LOG_DIR: /var/log/mongars
      DATA_DIR: /app/data
      HOST: 0.0.0.0
      PORT: ${API_PORT:-8000}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - mongars-data:/app/data
      - mongars-logs:/var/log/mongars
    ports:
      - "${API_PORT:-8000}:8000"
    restart: unless-stopped
    networks:
      - backend

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-mongars_db}
      POSTGRES_USER: ${DB_USER:-mongars}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-mongars} -d ${DB_NAME:-mongars_db}"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      mongars:
        condition: service_started
    ports:
      - "${WEBAPP_PORT:-8001}:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    networks:
      - backend

networks:
  backend:
    name: ${COMPOSE_PROJECT_NAME:-mongars}_backend
    driver: bridge

volumes:
  mongars-data:
  mongars-logs:
  postgres-data:
