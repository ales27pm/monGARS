name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt black isort
      - name: Check formatting
        run: |
          isort --check --diff .
          black --check .
      - name: Run tests
        run: pytest

  docker-pytest:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
      - name: Reclaim runner disk space
        if: runner.os == 'Linux'
        run: |
          set -euxo pipefail
          echo "Disk usage before cleanup"
          df -h
          sudo rm -rf /home/runner/actions-runner/_diag/* || true
          sudo rm -rf /home/runner/actions-runner/cached/* || true
          sudo rm -rf /home/runner/_work/_temp/* || true
          sudo rm -rf ~/.cache/pip || true
          sudo rm -rf ~/.cache/pnpm || true
          sudo rm -rf ~/.npm || true
          docker system prune -af || true
          docker volume prune -f || true
          echo "Disk usage after cleanup"
          df -h
      - name: Build Docker image for tests
        env:
          DOCKER_BUILDKIT: '1'
        run: |
          docker build \
            --build-arg PYTORCH_IMAGE=python:3.11-slim \
            -t mongars-ci .
      - name: Run pytest inside Docker image
        run: docker run --rm mongars-ci pytest -q

  inventory:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout target revision
        uses: actions/checkout@v4
        with:
          path: pr
          fetch-depth: 0
      - name: Checkout base revision
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        working-directory: pr
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Generate baseline inventory
        if: github.event_name == 'pull_request'
        working-directory: base
        run: python .tools/inventory.py --output ../baseline_inventory.json
      - name: Generate repository inventory
        working-directory: pr
        run: python .tools/inventory.py --output ../current_inventory.json
      - name: Compare inventory with base
        if: github.event_name == 'pull_request'
        run: |
          set +e
          diff -u baseline_inventory.json current_inventory.json > inventory.diff
          status=$?
          if [ $status -ne 0 ]; then
            echo 'Inventory differences detected. Showing first 200 diff lines.' >> "$GITHUB_STEP_SUMMARY"
            echo '```diff' >> "$GITHUB_STEP_SUMMARY"
            head -n 200 inventory.diff >> "$GITHUB_STEP_SUMMARY"
            echo '```' >> "$GITHUB_STEP_SUMMARY"
          else
            echo 'No inventory differences detected.' >> "$GITHUB_STEP_SUMMARY"
          fi
          exit 0
      - name: Create empty diff placeholder
        if: github.event_name != 'pull_request'
        run: touch inventory.diff
      - name: Upload inventory artifact
        uses: actions/upload-artifact@v4
        with:
          name: inventory
          path: |
            current_inventory.json
            inventory.diff
          if-no-files-found: warn
