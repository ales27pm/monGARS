name: Build Custom Québec-French Dataset (repo-only)

on:
  push:
    branches: ['**']         # run on any branch commit
  workflow_dispatch:
    inputs:
      ratios:
        description: "Sampling ratios (sum≈1), e.g. frca:0.50,agent:0.40,repo:0.10"
        type: string
        default: "frca:0.50,agent:0.40,repo:0.10"
      val_pct:
        description: "Validation split percentage"
        type: number
        default: 0.06
      strict_qc:
        description: "Strict fr-CA filter (drop non-Québécois unless agent/internal)"
        type: boolean
        default: true
      retention_days:
        description: "Artifact retention (days)"
        type: number
        default: 14

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.12"

concurrency:
  group: custom-dataset-${{ github.ref }}
  cancel-in-progress: true

jobs:
  scan_and_build:
    runs-on: ubuntu-latest
    env:
      CONFIRM_SCAN: "YES"
      CONFIRM_DATA_FETCH: "NO"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install OS deps (graphviz for PNG graph)
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Install minimal Python deps
        run: |
          python -m pip install --upgrade pip
          pip install networkx || true

      - name: Verify required scripts exist
        run: |
          test -f scripts/ultimate_repo_analyzer.py || (echo "Missing scripts/ultimate_repo_analyzer.py" && exit 1)
          test -f scripts/prepare_dataset.py        || (echo "Missing scripts/prepare_dataset.py" && exit 1)

      - name: Run analyzer (scan repo → mined artifacts)
        run: |
          set -euxo pipefail
          python scripts/ultimate_repo_analyzer.py
          echo "== Output tree =="
          find data/ultimate -maxdepth 3 -type f | sort || true

      - name: Assemble inputs for dataset builder
        run: |
          set -euxo pipefail
          mkdir -p data/raw
          cp data/ultimate/processed_repo/sft_repo.jsonl            data/raw/repo_sft.jsonl
          cp data/ultimate/processed_repo/agent_instruct_repo.jsonl data/raw/agent_handoff.jsonl
          # Repo-only pipeline: use repo SFT as the FRCA source
          cp data/ultimate/processed_repo/sft_repo.jsonl            data/raw/frca_repo.jsonl

      - name: Build final dataset (train/val)
        run: |
          set -euxo pipefail
          python scripts/prepare_dataset.py             --frca data/raw/frca_repo.jsonl             --agent data/raw/agent_handoff.jsonl             --repo data/raw/repo_sft.jsonl             --outdir data/final             --ratio "${{ inputs.ratios || 'frca:0.50,agent:0.40,repo:0.10' }}"             --val_pct ${{ inputs.val_pct || 0.06 }}             $([ "${{ inputs.strict_qc || true }}" = "true" ] && echo "--strict_qc" || true)

          echo "== Final counts =="
          wc -l data/final/train.jsonl || true
          wc -l data/final/val.jsonl   || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: final-custom-dataset
          path: |
            data/ultimate/processed_repo/sft_repo.jsonl
            data/ultimate/processed_repo/agent_instruct_repo.jsonl
            data/ultimate/processed_repo/embeddings_repo.jsonl
            data/ultimate/processed_repo/provenance.csv
            data/ultimate/interaction_graph.dot
            data/ultimate/interaction_graph.png
            data/final/train.jsonl
            data/final/val.jsonl
          retention-days: ${{ inputs.retention_days || 14 }}
          if-no-files-found: error
